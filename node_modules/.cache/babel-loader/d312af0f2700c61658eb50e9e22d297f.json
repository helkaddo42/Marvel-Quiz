{"ast":null,"code":"var _jsxFileName = \"/Users/hicham/Desktop/marvel/src/component/Quiz/index.js\";\nimport React, { Component } from 'react';\nimport Levels from '../Levels/index';\nimport ProgressBar from '../ProgressBar/index';\nimport Question from '../Question/index';\nimport { QuizMarvel } from '../QuizMarvel/index';\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      levelName: ['debutant', 'confirme', 'expert'],\n      QuizLevel: 0,\n      maxQuestion: 10\n    };\n\n    this.loadQuestion = level => {\n      const fetchArrayQuiz = QuizMarvel[0].quizz[level];\n\n      if (fetchArrayQuiz >= this.state.maxQuestion) {\n        const newArray = fetchArrayQuiz.map(({\n          answer,\n          ...keepRest\n        }) => keepRest);\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.loadQuestion(this.state.levelName[this.state.QuizLevel]);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Levels, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ProgressBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Question, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/Users/hicham/Desktop/marvel/src/component/Quiz/index.js"],"names":["React","Component","Levels","ProgressBar","Question","QuizMarvel","Quiz","state","levelName","QuizLevel","maxQuestion","loadQuestion","level","fetchArrayQuiz","quizz","newArray","map","answer","keepRest","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAAQC,UAAR,QAAyB,qBAAzB;;AAEA,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAEzBM,KAFyB,GAEnB;AACHC,MAAAA,SAAS,EAAC,CAAC,UAAD,EAAY,UAAZ,EAAuB,QAAvB,CADP;AAEHC,MAAAA,SAAS,EAAE,CAFR;AAGHC,MAAAA,WAAW,EAAE;AAHV,KAFmB;;AAAA,SASzBC,YATyB,GASXC,KAAK,IAAG;AAClB,YAAMC,cAAc,GAAGR,UAAU,CAAC,CAAD,CAAV,CAAcS,KAAd,CAAoBF,KAApB,CAAvB;;AAEA,UAAGC,cAAc,IAAI,KAAKN,KAAL,CAAWG,WAAhC,EAA4C;AACzC,cAAMK,QAAQ,GAAGF,cAAc,CAACG,GAAf,CAAoB,CAAC;AAACC,UAAAA,MAAD;AAAQ,aAAGC;AAAX,SAAD,KAAyBA,QAA7C,CAAjB;AACF;AAEJ,KAhBwB;;AAAA,SAkBzBC,iBAlByB,GAkBP,MAAI;AAClB,WAAKR,YAAL,CAAkB,KAAKJ,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWE,SAAhC,CAAlB;AACH,KApBwB;AAAA;;AAsBzBW,EAAAA,MAAM,GAAE;AAGJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAQC;;AAjCoB;;AAmC7B,eAAed,IAAf","sourcesContent":["import React,{Component} from 'react'\nimport Levels from '../Levels/index'\nimport ProgressBar from '../ProgressBar/index'\nimport Question from '../Question/index'\nimport {QuizMarvel} from '../QuizMarvel/index'\n\nclass Quiz extends Component {\n    \n    state={\n       levelName:['debutant','confirme','expert'],\n       QuizLevel: 0,\n       maxQuestion: 10,\n\n    }\n\n    loadQuestion= level =>{\n        const fetchArrayQuiz = QuizMarvel[0].quizz[level]\n\n        if(fetchArrayQuiz >= this.state.maxQuestion){\n           const newArray = fetchArrayQuiz.map( ({answer,...keepRest}) =>keepRest)\n        }\n        \n    }\n\n    componentDidMount=()=>{\n        this.loadQuestion(this.state.levelName[this.state.QuizLevel])\n    }\n\n    render(){\n\n\n        return (\n            <div>\n                <Levels />\n                <ProgressBar />\n                <Question />\n            </div> \n        )    \n   \n        }\n }\nexport default Quiz\n  "]},"metadata":{},"sourceType":"module"}