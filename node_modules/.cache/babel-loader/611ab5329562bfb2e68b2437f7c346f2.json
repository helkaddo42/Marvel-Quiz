{"ast":null,"code":"var _jsxFileName = \"/Users/hicham/Desktop/marvel/src/component/Inscription/index.js\";\nimport React, { useState, useContext } from 'react';\nimport { FirebaseContext } from '../Firebase/';\nimport { Link } from 'react-router-dom';\nconst data = {\n  pseudo: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nfunction Inscription(props) {\n  console.log(props); // ds ma state je lui envoi mon objet data creer en amont\n\n  const [loginData, setLoginData] = useState(data); // recuperation du message d'erreur si nous avons pas reussi a envoyer nos donner au back\n\n  const [error, setError] = useState(''); // destructuring de mes variabes qui se trouve ds ma state\n\n  const {\n    pseudo,\n    email,\n    password,\n    confirmPassword\n  } = loginData; // appel de mon Context avec lequel j'ai fourni mes methodes firebase que j'ai declarer ds une classe\n\n  const firebase = useContext(FirebaseContext);\n\n  const submit = e => {\n    e.preventDefault();\n    firebase.inscription(email, password).then(user => {\n      setError({ ...error\n      });\n      setLoginData({ ...loginData\n      });\n      props.history.push('/Welcome');\n    }).catch(error => {\n      setError(error);\n      setLoginData({ ...loginData\n      });\n    });\n  };\n\n  const valueInput = e => {\n    setLoginData({ ...loginData,\n      [e.target.id]: e.target.value\n    });\n  }; // afficher mon bonton submit uniquement si mes var de mon state sont remplient\n\n\n  const dataState = pseudo !== '' && email !== '' && password !== '' && password === confirmPassword ? /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"Inscription\") : /*#__PURE__*/React.createElement(\"button\", {\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 55\n    }\n  }, \"Inscription\"); // affichage message d'erreur\n  // const errorMessage = error !== '' && (<span>{error}</span>)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signUpLoginBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formBoxLeftSignup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formBoxRight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"formContent\",\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Inscription\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: pseudo,\n    id: \"pseudo\",\n    required: true,\n    onChange: valueInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"pseudo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Pseudo\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"mail\",\n    value: email,\n    id: \"email\",\n    required: true,\n    onChange: valueInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Email\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: password,\n    id: \"password\",\n    required: true,\n    onChange: valueInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"password\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: confirmPassword,\n    id: \"confirmPassword\",\n    required: true,\n    onChange: valueInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"confirmPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"confirmer votre mot de passe\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, dataState)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"linkContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/Welcome\",\n    className: \"simpleLink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \" d\\xE9ja inscrit ? connectez-vous\")))));\n}\n\nexport default Inscription;","map":{"version":3,"sources":["/Users/hicham/Desktop/marvel/src/component/Inscription/index.js"],"names":["React","useState","useContext","FirebaseContext","Link","data","pseudo","email","password","confirmPassword","Inscription","props","console","log","loginData","setLoginData","error","setError","firebase","submit","e","preventDefault","inscription","then","user","history","push","catch","valueInput","target","id","value","dataState"],"mappings":"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","sourcesContent":["import React,{useState,useContext} from 'react'\nimport {FirebaseContext} from '../Firebase/'\nimport {Link} from 'react-router-dom'\n\nconst data = {\n    pseudo:'',\n    email:'',\n    password:'',\n    confirmPassword:''\n}\n\nfunction Inscription(props) {\n    console.log(props)\n    // ds ma state je lui envoi mon objet data creer en amont\n    const [loginData, setLoginData] = useState(data)\n    // recuperation du message d'erreur si nous avons pas reussi a envoyer nos donner au back\n    const [error, setError] = useState('')\n\n    // destructuring de mes variabes qui se trouve ds ma state\n    const {pseudo, email, password, confirmPassword} = loginData\n    // appel de mon Context avec lequel j'ai fourni mes methodes firebase que j'ai declarer ds une classe\n    const firebase = useContext(FirebaseContext)\n\nconst submit=(e)=>{\ne.preventDefault()\n\nfirebase.inscription(email,password)\n.then((user)=>{\n    setError({...error})\n    setLoginData({...loginData});\n    props.history.push('/Welcome')\n})\n.catch((error)=>{\n    setError(error)\n    setLoginData({...loginData});\n})\n}\n\nconst valueInput=(e)=>{\nsetLoginData({...loginData,[e.target.id]: e.target.value})\n}\n// afficher mon bonton submit uniquement si mes var de mon state sont remplient\nconst dataState = pseudo !=='' && email !=='' && password !=='' && password === confirmPassword ? \n                   (<button>Inscription</button>) :  (<button disabled>Inscription</button>)\n// affichage message d'erreur\n// const errorMessage = error !== '' && (<span>{error}</span>)\nreturn (\n<div className='signUpLoginBox'>\n<div className='slContainer'>\n    <div className='formBoxLeftSignup'>\n\n    </div>\n    <div className='formBoxRight'>\n        <form className='formContent' onSubmit={submit} >\n\n            {/* {errorMessage} */}\n            <h2>Inscription</h2>\n            <div className='inputBox'>\n                <input type='text' value={pseudo} id='pseudo' required  onChange={valueInput} />\n                <label htmlFor='pseudo'>Pseudo</label>\n            </div>\n            <div className='inputBox'>\n                <input type='mail' value={email} id='email' required onChange={valueInput} />\n                <label htmlFor='email'>Email</label>\n            </div>\n            <div className='inputBox'>\n                <input type='password' value={password} id='password' required onChange={valueInput} />\n                <label htmlFor='password'>password</label>\n            </div>\n            <div className='inputBox'>\n                <input type='password' value={confirmPassword} id='confirmPassword' required  onChange={valueInput}/>\n                <label htmlFor='confirmPassword'>confirmer votre mot de passe</label>\n            </div>\n\n            <div>\n                {dataState}\n            </div>\n           \n        </form>\n            <div className='linkContainer'>\n                    <Link to='/Welcome' className='simpleLink'> déja inscrit ? connectez-vous</Link>\n            </div>\n    </div>\n</div>\n\n</div>\n)\n}\nexport default Inscription\n"]},"metadata":{},"sourceType":"module"}