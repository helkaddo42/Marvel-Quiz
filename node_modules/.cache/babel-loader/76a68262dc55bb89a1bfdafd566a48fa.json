{"ast":null,"code":"var _jsxFileName = \"/Users/hicham/Desktop/marvel/src/component/Inscription/index.js\";\nimport React, { useState, useContext } from 'react';\nimport { FirebaseContext } from '../Firebase/';\nimport { Link } from 'react-router-dom';\nconst dataSignUp = {\n  pseudo: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nfunction Inscription(props) {\n  // ds ma state je lui envoi mon objet data creer en amont\n  const [SignUpData, setSignUpData] = useState(dataSignUp); // recuperation du message d'erreur si nous avons pas reussi a envoyer nos donner au back\n\n  const [error, setError] = useState(''); // destructuring de mes variabes qui se trouve ds ma state\n\n  const {\n    pseudo,\n    email,\n    password,\n    confirmPassword\n  } = SignUpData; // appel de mon Context avec lequel j'ai fourni mes methodes firebase que j'ai declarer ds une classe\n\n  const firebase = useContext(FirebaseContext);\n\n  const submit = e => {\n    e.preventDefault();\n    firebase.inscription(email, password);\n    props.history.push('/Welcome').then(response => {\n      setSignUpData({ ...SignUpData\n      });\n      props.history.push('/Login');\n    }).catch(error => {\n      setError(error);\n      setSignUpData({ ...SignUpData\n      });\n    });\n  };\n\n  const valueInput = e => {\n    setSignUpData({ ...SignUpData,\n      [e.target.id]: e.target.value\n    });\n  }; // afficher mon bonton submit uniquement si mes var de mon state sont remplient\n\n\n  const BtnFinish = pseudo !== '' && email !== '' && password !== '' && password === confirmPassword ? /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Inscription\") : /*#__PURE__*/React.createElement(\"button\", {\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 55\n    }\n  }, \"Inscription\"); // affichage message d'erreur\n\n  const errorMessage = error !== '' && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 39\n    }\n  }, error.message);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signUpLoginBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formBoxLeftSignup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formBoxRight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"formContent\",\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, errorMessage, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Inscription\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: pseudo,\n    id: \"pseudo\",\n    required: true,\n    onChange: valueInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"pseudo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Pseudo\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"mail\",\n    value: email,\n    id: \"email\",\n    required: true,\n    onChange: valueInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Email\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: password,\n    id: \"password\",\n    required: true,\n    onChange: valueInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"password\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: confirmPassword,\n    id: \"confirmPassword\",\n    required: true,\n    onChange: valueInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"confirmPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"confirmer votre mot de passe\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, BtnFinish)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"linkContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/Login \",\n    className: \"simpleLink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \" d\\xE9ja inscrit ? connectez-vous\")))));\n}\n\nexport default Inscription;","map":{"version":3,"sources":["/Users/hicham/Desktop/marvel/src/component/Inscription/index.js"],"names":["React","useState","useContext","FirebaseContext","Link","dataSignUp","pseudo","email","password","confirmPassword","Inscription","props","SignUpData","setSignUpData","error","setError","firebase","submit","e","preventDefault","inscription","history","push","then","response","catch","valueInput","target","id","value","BtnFinish","errorMessage","message"],"mappings":"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","sourcesContent":["import React,{useState,useContext} from 'react'\nimport {FirebaseContext} from '../Firebase/'\nimport {Link} from 'react-router-dom'\n\nconst dataSignUp = {\n    pseudo:'',\n    email:'',\n    password:'',\n    confirmPassword:''\n}\n\nfunction Inscription(props) {\n    // ds ma state je lui envoi mon objet data creer en amont\n    const [SignUpData, setSignUpData] = useState(dataSignUp)\n    // recuperation du message d'erreur si nous avons pas reussi a envoyer nos donner au back\n    const [error, setError] = useState('')\n\n    // destructuring de mes variabes qui se trouve ds ma state\n    const {pseudo, email, password, confirmPassword} = SignUpData\n    // appel de mon Context avec lequel j'ai fourni mes methodes firebase que j'ai declarer ds une classe\n    const firebase = useContext(FirebaseContext)\n\nconst submit=(e)=>{\ne.preventDefault()\n\nfirebase.inscription(email,password)\nprops.history.push('/Welcome')\n.then((response)=>{\n    setSignUpData({...SignUpData});\n    props.history.push('/Login')\n})\n.catch((error)=>{\n    setError(error)\n    setSignUpData({...SignUpData});\n})\n}\n\nconst valueInput=(e)=>{\nsetSignUpData({...SignUpData,[e.target.id]: e.target.value})\n}\n// afficher mon bonton submit uniquement si mes var de mon state sont remplient\nconst BtnFinish = pseudo !=='' && email !=='' && password !=='' && password === confirmPassword ? \n                   (<button>Inscription</button>) :  (<button disabled>Inscription</button>)\n// affichage message d'erreur\nconst errorMessage = error !== '' && (<span>{error.message}</span>)\nreturn (\n<div className='signUpLoginBox'>\n<div className='slContainer'>\n    <div className='formBoxLeftSignup'>\n\n    </div>\n    <div className='formBoxRight'>\n        <form className='formContent' onSubmit={submit} >\n\n            {errorMessage}\n            <h2>Inscription</h2>\n            <div className='inputBox'>\n                <input type='text' value={pseudo} id='pseudo' required  onChange={valueInput} />\n                <label htmlFor='pseudo'>Pseudo</label>\n            </div>\n            <div className='inputBox'>\n                <input type='mail' value={email} id='email' required onChange={valueInput} />\n                <label htmlFor='email'>Email</label>\n            </div>\n            <div className='inputBox'>\n                <input type='password' value={password} id='password' required onChange={valueInput} />\n                <label htmlFor='password'>password</label>\n            </div>\n            <div className='inputBox'>\n                <input type='password' value={confirmPassword} id='confirmPassword' required  onChange={valueInput}/>\n                <label htmlFor='confirmPassword'>confirmer votre mot de passe</label>\n            </div>\n\n            <div>\n                {BtnFinish}\n            </div>\n           \n        </form>\n            <div className='linkContainer'>\n                    <Link to='/Login ' className='simpleLink'> déja inscrit ? connectez-vous</Link>\n            </div>\n    </div>\n</div>\n\n</div>\n)\n}\nexport default Inscription\n"]},"metadata":{},"sourceType":"module"}