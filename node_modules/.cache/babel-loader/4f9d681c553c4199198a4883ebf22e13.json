{"ast":null,"code":"var _jsxFileName = \"/Users/hicham/Desktop/marvel/src/component/QuizOver/index.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nconst QuizOver = React.forwardRef((props, ref) => {\n  const {\n    levelName,\n    score,\n    maxQuestions,\n    quizLevel,\n    percent,\n    loadLevelQuestions\n  } = props;\n  const [asked, setasked] = useState([]);\n  useEffect(() => {\n    setasked(ref.current);\n  }, [ref]);\n  const averageGrade = maxQuestions / 2; // if(score < averageGrade){ \n  //     setTimeout(()=>loadLevelQuestions(quizLevel), 2000)\n  // }\n\n  const decision = score >= averageGrade ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stepsBtnContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, quizLevel < levelName.length ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"successMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \" Bravo passer au niveau suivant!\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btnResult success\",\n    onClick: () => loadLevelQuestions(quizLevel),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Niveau suivant\")) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"successMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \" Bravo, rien a dire vous etes un vrais fans!!\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btnResult success\",\n    onClick: () => loadLevelQuestions(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"Acceuil\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"percentage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progressPercent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \" Reussite : \", percent, \"%\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progressPercent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \" Note : \", score, \"/\", maxQuestions, \" \"))) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stepsBtnContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"failureMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \" Vous avez echou\\xE9 !\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"percentage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progressPercent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \" Reussite : \", percent, \"%\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progressPercent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \" Note : \", score, \"/\", maxQuestions, \" \")));\n  const questionAnswerd = score >= averageGrade ? asked.map(options => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: options.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, \" \", options.question), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, \" \", options.answer), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btnInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, \" Infos \")));\n  }) : /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: 'center',\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"pas de r\\xE9ponses !\")));\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, decision, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"les reponses aux questions pos\\xE9es : \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"answers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }, \"Questions\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, \"R\\xE9ponses\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }, \"Infos\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, questionAnswerd))));\n});\nexport default React.memo(QuizOver);","map":{"version":3,"sources":["/Users/hicham/Desktop/marvel/src/component/QuizOver/index.js"],"names":["React","Fragment","useEffect","useState","QuizOver","forwardRef","props","ref","levelName","score","maxQuestions","quizLevel","percent","loadLevelQuestions","asked","setasked","current","averageGrade","decision","length","questionAnswerd","map","options","id","question","answer","textAlign","color","memo"],"mappings":"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","sourcesContent":["import React, {Fragment,useEffect,useState} from 'react'\n\nconst QuizOver = React.forwardRef((props, ref) => {\n\n\n    const {\n        levelName, \n        score, \n        maxQuestions, \n        quizLevel, \n        percent,\n        loadLevelQuestions\n    } = props;\n\n    const [asked, setasked] = useState([])\n\n    useEffect(() => {\n        setasked(ref.current)\n      \n    }, [ref])\n\n    const averageGrade= maxQuestions / 2\n\n    // if(score < averageGrade){ \n    //     setTimeout(()=>loadLevelQuestions(quizLevel), 2000)\n    // }\n\n    const decision = score >= averageGrade ?\n    (\n        <Fragment>\n            <div className='stepsBtnContainer'> \n            {\n                quizLevel < levelName.length ?\n                (\n                    <Fragment>\n                    <p className='successMsg'> Bravo passer au niveau suivant!</p>\n                    <button className='btnResult success'\n                            onClick={()=>loadLevelQuestions(quizLevel)} \n                    >Niveau suivant</button>\n                    </Fragment>\n\n                )\n                :\n                (\n                    <Fragment>\n                    <p className='successMsg'> Bravo, rien a dire vous etes un vrais fans!!</p>\n                    <button className='btnResult success'\n                            onClick={()=>loadLevelQuestions(0)} \n                    >Acceuil</button>\n                    </Fragment>\n\n                )\n\n            }\n            </div>\n            <div className='percentage'>\n        <div className='progressPercent'> Reussite : {percent}%</div>\n        <div className='progressPercent'> Note : {score}/{maxQuestions} </div>\n            </div>\n        </Fragment>\n\n    )\n    :\n    (\n        <Fragment>\n                <div className='stepsBtnContainer'> \n                    <p className='failureMsg'> Vous avez echoué !</p>\n                </div>\n            <div className='percentage'>\n                <div className='progressPercent'> Reussite : {percent}%</div>\n                <div className='progressPercent'> Note : {score}/{maxQuestions} </div>\n            </div>\n\n            \n        </Fragment>\n\n    )\n\n    const questionAnswerd = score >=  averageGrade ? (asked.map((options)=>{\n        return(\n            <tr key={options.id}>\n                <td> {options.question }</td>\n                <td> {options.answer }</td>\n                <td>\n                    <button className='btnInfo'> Infos </button>\n                </td>\n            </tr>\n        )\n    })) : \n    (\n        <tr>\n            <td colSpan='3'>\n                <div className='loader'></div>\n                <p style={{textAlign: 'center', color : 'red'}} >\n                    pas de réponses !\n                </p>\n            </td>\n        </tr>\n\n    )\n   \n\n\n    return (\n\n        <Fragment>\n           \n           {decision}\n\n            <hr />\n            <p>les reponses aux questions posées : </p>\n\n            <div className='answerContainer'>\n                <table className='answers'>\n                    <thead>\n                        <tr>\n                            <th>Questions</th>\n                            <th>Réponses</th>\n                            <th>Infos</th>\n                        </tr>\n\n                    </thead>\n                    <tbody>\n                        {questionAnswerd}\n                    </tbody>\n                </table>\n            </div>\n\n        </Fragment>\n    )\n})\n\n\n \nexport default React.memo(QuizOver) \n"]},"metadata":{},"sourceType":"module"}