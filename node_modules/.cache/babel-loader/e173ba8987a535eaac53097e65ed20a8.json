{"ast":null,"code":"var _jsxFileName = \"/Users/hicham/Desktop/marvel/src/component/Inscription/index.js\";\nimport React, { useState, useContext } from 'react';\nimport { FirebaseContext } from '../Firebase/index';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nconst dataSignUp = {\n  pseudo: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nfunction Inscription(props) {\n  const [SignUpData, setSignUpData] = useState(dataSignUp);\n  const [error, setError] = useState('');\n  const {\n    pseudo,\n    email,\n    password,\n    confirmPassword\n  } = SignUpData;\n  const authData = {\n    email: email,\n    password: password,\n    returnSecureToken: true\n  };\n  const firebase = useContext(FirebaseContext);\n\n  const submit = e => {\n    e.preventDefault();\n    firebase.inscription(email, password).then(response => {\n      console.log('1/response', response);\n      props.history.push('/Login');\n    }).catch(error => {\n      console.log('2/err', error.response);\n      setError(error);\n      setSignUpData({ ...SignUpData\n      });\n    });\n  }; // const submit=(e)=>{\n  // e.preventDefault()\n  // axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAa-FqTe2diLWwLcCH3kLLXAbol0UYcodQ',authData)\n  //         .then(response => {\n  //             console.log('1/response',response)\n  //             props.history.push('/Login')\n  //         })\n  //         .catch(error => {\n  //             console.log('2/err',error.response)\n  //             setError(error)\n  //             setSignUpData({...SignUpData});\n  //         })\n  // }\n\n\n  const valueInput = e => {\n    setSignUpData({ ...SignUpData,\n      [e.target.id]: e.target.value\n    });\n  };\n\n  const BtnFinish = pseudo !== '' && email !== '' && password !== '' && password === confirmPassword ? /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"Inscription\") : /*#__PURE__*/React.createElement(\"button\", {\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 55\n    }\n  }, \"Inscription\");\n  const errorMessage = error !== '' && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 38\n    }\n  }, error.response.data.error.message);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signUpLoginBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formBoxLeftSignup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formBoxRight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"formContent\",\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, errorMessage, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Inscription\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: pseudo,\n    id: \"pseudo\",\n    required: true,\n    onChange: valueInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"pseudo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Pseudo\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"mail\",\n    value: email,\n    id: \"email\",\n    required: true,\n    onChange: valueInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"Email\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: password,\n    id: \"password\",\n    required: true,\n    onChange: valueInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"password\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: confirmPassword,\n    id: \"confirmPassword\",\n    required: true,\n    onChange: valueInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"confirmPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"confirmer votre mot de passe\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, BtnFinish)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"linkContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/Login\",\n    className: \"simpleLink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, \" d\\xE9ja inscrit ? connectez-vous\")))));\n}\n\nexport default Inscription;","map":{"version":3,"sources":["/Users/hicham/Desktop/marvel/src/component/Inscription/index.js"],"names":["React","useState","useContext","FirebaseContext","Link","axios","dataSignUp","pseudo","email","password","confirmPassword","Inscription","props","SignUpData","setSignUpData","error","setError","authData","returnSecureToken","firebase","submit","e","preventDefault","inscription","then","response","console","log","history","push","catch","valueInput","target","id","value","BtnFinish","errorMessage","data","message"],"mappings":"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","sourcesContent":["import React,{useState ,useContext} from 'react'\nimport  {FirebaseContext} from '../Firebase/index'\nimport {Link} from 'react-router-dom'\nimport axios from 'axios'\n\nconst dataSignUp = {\n    pseudo:'',\n    email:'',\n    password:'',\n    confirmPassword:''\n}\n\n\n\nfunction Inscription(props) {\n    const [SignUpData, setSignUpData] = useState(dataSignUp)\n    const [error, setError] = useState('')\n\n    const {pseudo, email, password, confirmPassword} = SignUpData\n\nconst authData={\n    email: email,\n    password: password,\n    returnSecureToken: true\n}\nconst firebase = useContext(FirebaseContext)\n\nconst submit=(e)=>{\n    e.preventDefault()\n    firebase.inscription(email,password)\n            .then(response => {\n                console.log('1/response',response)\n                props.history.push('/Login')\n            })\n            .catch(error => {\n                console.log('2/err',error.response)\n                setError(error)\n                setSignUpData({...SignUpData});\n    \n                \n            })\n    \n    }\n    \n\n// const submit=(e)=>{\n// e.preventDefault()\n// axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAa-FqTe2diLWwLcCH3kLLXAbol0UYcodQ',authData)\n//         .then(response => {\n//             console.log('1/response',response)\n//             props.history.push('/Login')\n//         })\n//         .catch(error => {\n//             console.log('2/err',error.response)\n//             setError(error)\n//             setSignUpData({...SignUpData});\n\n            \n//         })\n\n// }\n\nconst valueInput=(e)=>{\nsetSignUpData({...SignUpData,[e.target.id]: e.target.value})\n}\n\nconst BtnFinish= pseudo !=='' && email !=='' && password !=='' && password === confirmPassword ? \n                   (<button>Inscription</button>) :  (<button disabled>Inscription</button>)\nconst errorMessage= error !== '' && (<span>{error.response.data.error.message}</span>)\n\nreturn (\n<div className='signUpLoginBox'>\n<div className='slContainer'>\n    <div className='formBoxLeftSignup'>\n\n    </div>\n    <div className='formBoxRight'>\n        <form className='formContent' onSubmit={submit} >\n\n            {errorMessage}\n            <h2>Inscription</h2>\n            <div className='inputBox'>\n                <input type='text' value={pseudo} id='pseudo' required  onChange={valueInput} />\n                <label htmlFor='pseudo'>Pseudo</label>\n            </div>\n            <div className='inputBox'>\n                <input type='mail' value={email} id='email' required onChange={valueInput} />\n                <label htmlFor='email'>Email</label>\n            </div>\n            <div className='inputBox'>\n                <input type='password' value={password} id='password' required onChange={valueInput} />\n                <label htmlFor='password'>password</label>\n            </div>\n            <div className='inputBox'>\n                <input type='password' value={confirmPassword} id='confirmPassword' required  onChange={valueInput}/>\n                <label htmlFor='confirmPassword'>confirmer votre mot de passe</label>\n            </div>\n\n            <div>\n                {BtnFinish}\n            </div>\n           \n        </form>\n            <div className='linkContainer'>\n                    <Link to='/Login' className='simpleLink'> déja inscrit ? connectez-vous</Link>\n            </div>\n    </div>\n</div>\n\n</div>\n)\n}\nexport default Inscription\n"]},"metadata":{},"sourceType":"module"}