{"ast":null,"code":"var _jsxFileName = \"/Users/hicham/Desktop/marvel/src/component/Quiz/index.js\";\nimport React, { Component } from 'react';\nimport Levels from '../Levels/index';\nimport ProgressBar from '../ProgressBar/index';\nimport Question from '../Question/index';\nimport { QuizMarvel } from '../QuizMarvel/index';\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      levelName: ['debutant', 'confirme', 'expert'],\n      QuizLevel: 0,\n      maxQuestion: 10,\n      storedQuestion: [],\n      questions: '',\n      options: [],\n      idQuestion: 0,\n      btnValue: true\n    };\n\n    this.loadQuestion = level => {\n      const fetchArrayQuiz = QuizMarvel[0].quizz[level];\n      const lengthArray = fetchArrayQuiz.length;\n\n      if (lengthArray >= this.state.maxQuestion) {\n        const newArray = fetchArrayQuiz.map(({\n          answer,\n          ...keepRest\n        }) => keepRest);\n        this.setState({\n          storedQuestion: newArray\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.loadQuestion(this.state.levelName[this.state.QuizLevel]);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.storedQuestion !== prevState.storedQuestion) {\n      this.setState({\n        questions: this.state.storedQuestion[this.state.idQuestion].question,\n        options: this.state.storedQuestion[this.state.idQuestion].options\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Levels, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ProgressBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Question, {\n      btn: this.state.btnValue,\n      answer: this.state.questions,\n      options: this.state.options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/Users/hicham/Desktop/marvel/src/component/Quiz/index.js"],"names":["React","Component","Levels","ProgressBar","Question","QuizMarvel","Quiz","state","levelName","QuizLevel","maxQuestion","storedQuestion","questions","options","idQuestion","btnValue","loadQuestion","level","fetchArrayQuiz","quizz","lengthArray","length","newArray","map","answer","keepRest","setState","componentDidMount","componentDidUpdate","prevProps","prevState","question","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAAQC,UAAR,QAAyB,qBAAzB;;AAEA,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAEzBM,KAFyB,GAEnB;AACHC,MAAAA,SAAS,EAAC,CAAC,UAAD,EAAY,UAAZ,EAAuB,QAAvB,CADP;AAEHC,MAAAA,SAAS,EAAE,CAFR;AAGHC,MAAAA,WAAW,EAAE,EAHV;AAIHC,MAAAA,cAAc,EAAC,EAJZ;AAKHC,MAAAA,SAAS,EAAE,EALR;AAMHC,MAAAA,OAAO,EAAE,EANN;AAOHC,MAAAA,UAAU,EAAE,CAPT;AAQHC,MAAAA,QAAQ,EAAE;AARP,KAFmB;;AAAA,SAczBC,YAdyB,GAcXC,KAAK,IAAG;AAClB,YAAMC,cAAc,GAAGb,UAAU,CAAC,CAAD,CAAV,CAAcc,KAAd,CAAoBF,KAApB,CAAvB;AACA,YAAMG,WAAW,GAAGF,cAAc,CAACG,MAAnC;;AAEA,UAAGD,WAAW,IAAI,KAAKb,KAAL,CAAWG,WAA7B,EAAyC;AAEtC,cAAMY,QAAQ,GAAGJ,cAAc,CAACK,GAAf,CAAoB,CAAC;AAACC,UAAAA,MAAD;AAAS,aAAGC;AAAZ,SAAD,KAA0BA,QAA9C,CAAjB;AACC,aAAKC,QAAL,CAAc;AAACf,UAAAA,cAAc,EAAGW;AAAlB,SAAd;AAEH;AAEJ,KAzBwB;AAAA;;AA2BzBK,EAAAA,iBAAiB,GAAE;AACf,SAAKX,YAAL,CAAkB,KAAKT,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWE,SAAhC,CAAlB;AACH;;AAEDmB,EAAAA,kBAAkB,CAACC,SAAD,EAAaC,SAAb,EAAuB;AACrC,QAAG,KAAKvB,KAAL,CAAWI,cAAX,KAA8BmB,SAAS,CAACnB,cAA3C,EAA0D;AACtD,WAAKe,QAAL,CAAc;AACVd,QAAAA,SAAS,EAAG,KAAKL,KAAL,CAAWI,cAAX,CAA0B,KAAKJ,KAAL,CAAWO,UAArC,EAAiDiB,QADnD;AAEVlB,QAAAA,OAAO,EAAG,KAAKN,KAAL,CAAWI,cAAX,CAA0B,KAAKJ,KAAL,CAAWO,UAArC,EAAiDD;AAFjD,OAAd;AAIH;AACJ;;AACDmB,EAAAA,MAAM,GAAE;AAGJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAE,KAAKzB,KAAL,CAAWQ,QAA1B;AAAoC,MAAA,MAAM,EAAE,KAAKR,KAAL,CAAWK,SAAvD;AAAmE,MAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,OAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAQC;;AAlDoB;;AAoD7B,eAAeP,IAAf","sourcesContent":["import React,{Component} from 'react'\nimport Levels from '../Levels/index'\nimport ProgressBar from '../ProgressBar/index'\nimport Question from '../Question/index'\nimport {QuizMarvel} from '../QuizMarvel/index'\n\nclass Quiz extends Component {\n    \n    state={\n       levelName:['debutant','confirme','expert'],\n       QuizLevel: 0,\n       maxQuestion: 10,\n       storedQuestion:[],\n       questions: '',\n       options: [],\n       idQuestion: 0,\n       btnValue: true\n\n    }\n\n    loadQuestion= level =>{\n        const fetchArrayQuiz = QuizMarvel[0].quizz[level]\n        const lengthArray = fetchArrayQuiz.length\n\n        if(lengthArray >= this.state.maxQuestion){\n\n           const newArray = fetchArrayQuiz.map( ({answer, ...keepRest}) =>keepRest)\n            this.setState({storedQuestion : newArray})\n      \n        }\n        \n    }  \n\n    componentDidMount(){\n        this.loadQuestion(this.state.levelName[this.state.QuizLevel])\n    }\n\n    componentDidUpdate(prevProps , prevState){\n        if(this.state.storedQuestion !== prevState.storedQuestion){\n            this.setState({\n                questions : this.state.storedQuestion[this.state.idQuestion].question,\n                options : this.state.storedQuestion[this.state.idQuestion].options,\n            })\n        }\n    }\n    render(){\n\n\n        return (\n            <div>\n                <Levels />\n                <ProgressBar />\n                <Question btn={this.state.btnValue} answer={this.state.questions}  options={this.state.options}/>\n            </div> \n        )    \n   \n        }\n }\nexport default Quiz\n  "]},"metadata":{},"sourceType":"module"}